# YAML criado para o processo de pull request na branch de homologação em
# um projeto de aplicativo feito em React Native.
# Os passos nesse processo serão:
# Instalar as dependencias, realizar os testes no jest e, caso tudo tenha
# ocorrido conforme desejado, irá subir a versão de build no Android e iOS.
# Criado por Renan Serrão Nogueira

name: 2.8$(Rev:.r)

pool:
  vmImage: 'macOS-latest'

pr:
- homologacao

steps:

# Dando permissões de checkout
- checkout: self
  persistCredentials: true
  displayName: 'Checkout permissions'

# - task: DownloadSecureFile@1
#   inputs:
#     secureFile: server.key

# # Add user do Github
# - script: |
#     git config --global user.email "$(Build.RequestedFor)"
#     git config --global user.name "$(Build.RequestedForEmail)"
#   displayName: 'Add git user config'

# # Checkout no Github
# - script: git checkout $(Build.SourceBranchName)
#   displayName: 'Checkout branch'

# Instalando o node
# - task: NodeTool@0
#   inputs:
#     versionSpec: '9.7.1'
#   displayName: 'Install Node'

# Instalando as dependências
# - script: npm install
#   displayName: 'Install dependencies'

# Realizando os testes
# - script: npm run test
#   displayName: 'Run unit tests'

# Subindo a versão do Android
- task: VersionAssemblies@2
  inputs:
    sourcePath: 'android/app/'
    filePattern: 'build.gradle'
    versionSource: 'buildNumber'
    versionFormat: 'custom'
    customBuildRegex: '(?:\d.\d.\d+)'
    replaceVersionFormat: 'custom'
    customReplaceRegex: 'versionName "\d.\d.\d+'
    replacePrefix: 'versionName "'
  displayName: 'Android bump'
  
# Log de saída após subir a versão do Android (Depuração)
- script: cat android/app/build.gradle
  displayName: 'Android Build Cat'

# Subindo a versão do iOS
- task: VersionAssemblies@2
  inputs:
    sourcePath: 'ios/azuredevopsbuild.xcodeproj/'
    filePattern: 'project.pbxproj'
    versionSource: 'buildNumber'
    versionFormat: 'custom'
    customBuildRegex: '(?:\d.\d.\d+)'
    replaceVersionFormat: 'custom'
    customReplaceRegex: 'MARKETING_VERSION = \d.\d.\d+'
    replacePrefix: 'MARKETING_VERSION = '
  displayName: 'iOS bump'

# Log de saída após subir a versão do iOS (Depuração)
- script: cat ios/azuredevopsbuild.xcodeproj/project.pbxproj
  displayName: 'iOS Build Cat'

# Github
- script: |
    git config --global user.email "tifitcard@gmail.com"
    git config --global user.name "Fitcard Azure Pipelines Agent"
    git checkout $(Build.SourceBranchName)
    git add .
    git status
    git commit -m "Automated Pipeline script for build $(Build.BuildId)"
    git push origin HEAD:$(Build.SourceBranch)
  displayName: 'Pushing new version'